# Copyright 2025 Dotanuki Labs
# SPDX-License-Identifier: MIT

name: ci-rust

permissions:
  contents: read

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Checking formatting of Rust code (rustfmt)
        run: cargo fmt --check

      - name: Checking smells in Rust code (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings

  tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup Rust tools
        uses: ./.github/actions/setup-rust

      - name: Run project tests
        run: cargo xtasks tests

  security:
    needs: [lint, tests]
    runs-on: ubuntu-24.04

    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Check issues with supply chain
        run: cargo xtasks security

  build:
    needs: [lint, tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-15 ]

    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup Rust tools
        uses: ./.github/actions/setup-rust
        with:
          install-extra-tools: true

      - name: Generates build artifacts
        run: cargo xtasks artifacts binaries

      - name: Archive binaries
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: pollux-binaries-${{ runner.os }}
          path: artifacts

  extras:
    needs: build
    runs-on: ubuntu-24.04

    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Fetch executable from previous build
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          path: artifacts
          pattern: pollux-binaries-*

      - name: Setup Rust tools
        uses: ./.github/actions/setup-rust

      - name: Generate additional artifacts
        run: cargo xtasks artifacts extras

      - name: Archive checksums
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: checksums.txt
          path: artifacts/checksums.txt

      - name: Archive SBOM
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: sbom-${{ github.sha }}.json
          path: crates/pollux/pollux.cdx.json

  publish:
    needs: build
    runs-on: ubuntu-24.04
    services:
      local-registry:
        image: ghcr.io/kellnr/kellnr:5@sha256:2a58332b562df3fab776a5cd56bf6a20dbdcc7bd0553090283012abb4bd9aed0
        ports:
          - 8000:8000
        options: >-
          --health-cmd "curl -f http://localhost:8000/api/v1/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Project checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup Rust tools
        uses: ./.github/actions/setup-rust

      - name: Publish on local registry
        run: cargo publish -p pollux --registry local # zizmor: ignore[use-trusted-publishing]
